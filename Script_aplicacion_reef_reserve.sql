-- Codigo ejecutado por usuario admin de la base de datos:

-- CREACION DE USUARIO CONEXION PARA APLICACION
-- Crear el usuario del sistema
CREATE USER reef_user IDENTIFIED BY ReefReserve2024
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON users;

-- Otorgar privilegios al usuario del sistema
GRANT CONNECT, RESOURCE TO reef_user;

-- Codigo ejecutado por usuario reef_user dueño de tablas:

-- Eliminar las tablas en orden

DROP TABLE servicio_usuario CASCADE CONSTRAINTS;
DROP TABLE reserva CASCADE CONSTRAINTS;
DROP TABLE fotografia CASCADE CONSTRAINTS;
DROP TABLE habitacion CASCADE CONSTRAINTS;
DROP TABLE usuario CASCADE CONSTRAINTS;
DROP TABLE tipo_usuario CASCADE CONSTRAINTS;
DROP TABLE categoria_hab CASCADE CONSTRAINTS;
DROP TABLE estado_hab CASCADE CONSTRAINTS;
DROP TABLE estado_reserva CASCADE CONSTRAINTS;
DROP TABLE servicio CASCADE CONSTRAINTS;
DROP TABLE ubicacion CASCADE CONSTRAINTS;

-- CREACION DE TABLAS DE APLICACION
CREATE TABLE categoria_hab (
    id_categoria NUMBER GENERATED BY DEFAULT AS IDENTITY,
    desc_cat     VARCHAR2(100) NOT NULL
);

CREATE TABLE estado_hab (
    id_estado  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    desc_est_hab VARCHAR2(100) NOT NULL
);

CREATE TABLE estado_reserva (
    id_estado    NUMBER GENERATED BY DEFAULT AS IDENTITY,
    desc_est_res VARCHAR2(100) NOT NULL
);

CREATE TABLE fotografia (
    id_fotografia  NUMBER GENERATED BY DEFAULT AS IDENTITY,
    url_fotografia VARCHAR2(255) NOT NULL,
    id_habitacion  NUMBER NOT NULL
);

CREATE TABLE habitacion (
    id_habitacion    NUMBER GENERATED BY DEFAULT AS IDENTITY,
    numero_hab       VARCHAR2(50) NOT NULL,
    info_hab         VARCHAR2(255),
    equipamiento_hab VARCHAR2(255),
    valor_diario_hab NUMBER NOT NULL,
    id_ubicacion     NUMBER NOT NULL,
    id_estado        NUMBER NOT NULL,
    id_categoria     NUMBER NOT NULL
);

CREATE TABLE reserva (
    id_reserva    NUMBER GENERATED BY DEFAULT AS IDENTITY,
    fecha_inicio  DATE NOT NULL,
    fecha_termino DATE NOT NULL,
    cantidad_dias NUMBER NOT NULL,
    abono         NUMBER,
    costo         NUMBER NOT NULL,
    id_usuario    NUMBER NOT NULL,
    id_habitacion NUMBER NOT NULL,
    id_estado     NUMBER NOT NULL
);

CREATE TABLE servicio (
    id_servicio     NUMBER GENERATED BY DEFAULT AS IDENTITY,
    nombre_servicio VARCHAR2(100)
);

CREATE TABLE servicio_usuario (
    id_usuario  NUMBER NOT NULL,
    id_servicio NUMBER NOT NULL
);

CREATE TABLE tipo_usuario (
    id_tipo_usuario NUMBER GENERATED BY DEFAULT AS IDENTITY,
    descripcion     VARCHAR2(100) NOT NULL
);

CREATE TABLE ubicacion (
    id_ubicacion NUMBER GENERATED BY DEFAULT AS IDENTITY,
    desc_ubic    VARCHAR2(100) NOT NULL
);

CREATE TABLE usuario (
    id_usuario         NUMBER GENERATED BY DEFAULT AS IDENTITY,
    correo_electronico VARCHAR2(150) NOT NULL,
    clave_usuario      VARCHAR2(100) NOT NULL,
    nombre_usuario     VARCHAR2(100) NOT NULL,
    apellido_usuario   VARCHAR2(100) NOT NULL,
    id_tipo_usuario    NUMBER NOT NULL
);

-- CREACION DE CONSTRAINTS Y PK (PRIMARY KEY)

ALTER TABLE categoria_hab ADD CONSTRAINT pk_categoria_hab PRIMARY KEY ( id_categoria );

ALTER TABLE estado_hab ADD CONSTRAINT pk_estado_hab PRIMARY KEY ( id_estado );

ALTER TABLE estado_reserva ADD CONSTRAINT pk_estado_reserva PRIMARY KEY ( id_estado );

ALTER TABLE fotografia ADD CONSTRAINT pk_fotografia PRIMARY KEY ( id_fotografia );

ALTER TABLE habitacion ADD CONSTRAINT pk_habitacion PRIMARY KEY ( id_habitacion );

ALTER TABLE reserva ADD CONSTRAINT reserva_pk PRIMARY KEY ( id_reserva );

ALTER TABLE servicio ADD CONSTRAINT pk_servicio PRIMARY KEY ( id_servicio );

ALTER TABLE tipo_usuario ADD CONSTRAINT pk_tipo_usuario PRIMARY KEY ( id_tipo_usuario );

ALTER TABLE ubicacion ADD CONSTRAINT pk_ubicacion PRIMARY KEY ( id_ubicacion );

ALTER TABLE usuario ADD CONSTRAINT pk_usuario PRIMARY KEY ( id_usuario );

ALTER TABLE usuario ADD CONSTRAINT correo_electronico UNIQUE ( correo_electronico );

-- CREACION DE FK

ALTER TABLE fotografia
    ADD CONSTRAINT fk_fotografia_hab FOREIGN KEY ( id_habitacion )
        REFERENCES habitacion ( id_habitacion );

ALTER TABLE habitacion
    ADD CONSTRAINT fk_hab_categoria_hab FOREIGN KEY ( id_categoria )
        REFERENCES categoria_hab ( id_categoria );

ALTER TABLE habitacion
    ADD CONSTRAINT fk_hab_estado_hab FOREIGN KEY ( id_estado )
        REFERENCES estado_hab ( id_estado );

ALTER TABLE habitacion
    ADD CONSTRAINT fk_hab_ubicacion_fk FOREIGN KEY ( id_ubicacion )
        REFERENCES ubicacion ( id_ubicacion );

ALTER TABLE reserva
    ADD CONSTRAINT fk_res_estado_reserva FOREIGN KEY ( id_estado )
        REFERENCES estado_reserva ( id_estado );

ALTER TABLE reserva
    ADD CONSTRAINT fk_res_habitacion FOREIGN KEY ( id_habitacion )
        REFERENCES habitacion ( id_habitacion );

ALTER TABLE reserva
    ADD CONSTRAINT fk_res_usuario FOREIGN KEY ( id_usuario )
        REFERENCES usuario ( id_usuario );

ALTER TABLE servicio_usuario
    ADD CONSTRAINT fk_serv_usu_usuario FOREIGN KEY ( id_usuario )
        REFERENCES usuario ( id_usuario );

ALTER TABLE servicio_usuario
    ADD CONSTRAINT fk_serv_usuario_servicio FOREIGN KEY ( id_servicio )
        REFERENCES servicio ( id_servicio );

ALTER TABLE usuario
    ADD CONSTRAINT fk_usu_tipo_usuario FOREIGN KEY ( id_tipo_usuario )
        REFERENCES tipo_usuario ( id_tipo_usuario );

-- INSERCION DE DATOS EN TABLAS
               
-- Insertar datos en la tabla tipo_usuario
INSERT INTO tipo_usuario (descripcion) VALUES ('Administrador');
INSERT INTO tipo_usuario (descripcion) VALUES ('Empleado');
INSERT INTO tipo_usuario (descripcion) VALUES ('Cliente');

-- Insertar datos en la tabla estado_reserva
INSERT INTO estado_reserva (desc_est_res) VALUES ('Pendiente');
INSERT INTO estado_reserva (desc_est_res) VALUES ('Confirmada');
INSERT INTO estado_reserva (desc_est_res) VALUES ('Cancelada');

-- Insertar datos en la tabla estado_hab
INSERT INTO estado_hab (desc_est_hab) VALUES ('Disponible');
INSERT INTO estado_hab (desc_est_hab) VALUES ('Ocupada');
INSERT INTO estado_hab (desc_est_hab) VALUES ('Mantenimiento');

-- Insertar un usuario administrador genesis en la tabla usuario, quien podra crear usuarios de tipo administrador o empleado
INSERT INTO usuario (correo_electronico, clave_usuario, nombre_usuario, apellido_usuario, id_tipo_usuario)
VALUES ('admin@reefreserve.com', 'Admin1234', 'Admin', 'Principal', 1);
COMMIT;
